{"ast":null,"code":"import axios from 'axios';\nimport * as yup from 'yup';\nconst pinata_api_key = '1e8fd7c04c433056e9d8';\nconst pinata_secret_api_key = '295594035c72c8adba418a1c260124a3e699413b5e74ea51761879dc345b8b88';\nconst url = 'https://api.pinata.cloud/pinning/pinJSONToIPFS';\nexport const pinata_base_url = 'https://gateway.pinata.cloud/ipfs/'; ////////////////////////////////////////////////////////////\n\nexport const formSchema = yup.object().shape({\n  Name: yup.string().required(),\n  Description: yup.string().required()\n});\nexport const pinFileToIPFS = (name, description) => {\n  const currentDate = Date.now();\n  return axios.post(url, {\n    name,\n    description,\n    date: currentDate\n  }, {\n    headers: {\n      pinata_api_key: pinata_api_key,\n      pinata_secret_api_key: pinata_secret_api_key\n    }\n  }).then(response => {\n    return response.data.IpfsHash;\n  }).catch(function (error) {\n    console.log(error);\n  });\n};\nexport const formatFullIpfsUrl = url => {\n  return `${pinata_base_url}${url}`;\n};","map":{"version":3,"sources":["/Users/K.Z./Desktop/crypto/pow-nft/frontend/src/components/ProposerMasterPage/helper.ts"],"names":["axios","yup","pinata_api_key","pinata_secret_api_key","url","pinata_base_url","formSchema","object","shape","Name","string","required","Description","pinFileToIPFS","name","description","currentDate","Date","now","post","date","headers","then","response","data","IpfsHash","catch","error","console","log","formatFullIpfsUrl"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,MAAMC,cAAc,GAAG,sBAAvB;AACA,MAAMC,qBAAqB,GAAG,kEAA9B;AACA,MAAMC,GAAG,GAAG,gDAAZ;AACA,OAAO,MAAMC,eAAe,GAAG,oCAAxB,C,CAEP;;AAEA,OAAO,MAAMC,UAAU,GAAGL,GAAG,CAACM,MAAJ,GAAaC,KAAb,CAAmB;AAC3CC,EAAAA,IAAI,EAAER,GAAG,CAACS,MAAJ,GAAaC,QAAb,EADqC;AAE3CC,EAAAA,WAAW,EAAEX,GAAG,CAACS,MAAJ,GAAaC,QAAb;AAF8B,CAAnB,CAAnB;AAKP,OAAO,MAAME,aAAa,GAAG,CAACC,IAAD,EAAeC,WAAf,KAAwD;AACnF,QAAMC,WAAW,GAAGC,IAAI,CAACC,GAAL,EAApB;AAEA,SAAOlB,KAAK,CACTmB,IADI,CAEHf,GAFG,EAGH;AAAEU,IAAAA,IAAF;AAAQC,IAAAA,WAAR;AAAqBK,IAAAA,IAAI,EAAEJ;AAA3B,GAHG,EAIH;AACEK,IAAAA,OAAO,EAAE;AACPnB,MAAAA,cAAc,EAAEA,cADT;AAEPC,MAAAA,qBAAqB,EAAEA;AAFhB;AADX,GAJG,EAWJmB,IAXI,CAWEC,QAAD,IAAmB;AACvB,WAAOA,QAAQ,CAACC,IAAT,CAAcC,QAArB;AACD,GAbI,EAcJC,KAdI,CAcE,UAAUC,KAAV,EAAiB;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,GAhBI,CAAP;AAiBD,CApBM;AAsBP,OAAO,MAAMG,iBAAiB,GAAI1B,GAAD,IAAyB;AACxD,SAAQ,GAAEC,eAAgB,GAAED,GAAI,EAAhC;AACD,CAFM","sourcesContent":["import axios from 'axios';\nimport * as yup from 'yup';\n\nconst pinata_api_key = '1e8fd7c04c433056e9d8';\nconst pinata_secret_api_key = '295594035c72c8adba418a1c260124a3e699413b5e74ea51761879dc345b8b88';\nconst url = 'https://api.pinata.cloud/pinning/pinJSONToIPFS';\nexport const pinata_base_url = 'https://gateway.pinata.cloud/ipfs/';\n\n////////////////////////////////////////////////////////////\n\nexport const formSchema = yup.object().shape({\n  Name: yup.string().required(),\n  Description: yup.string().required(),\n});\n\nexport const pinFileToIPFS = (name: string, description: string): Promise<string> => {\n  const currentDate = Date.now();\n\n  return axios\n    .post(\n      url,\n      { name, description, date: currentDate },\n      {\n        headers: {\n          pinata_api_key: pinata_api_key,\n          pinata_secret_api_key: pinata_secret_api_key,\n        },\n      }\n    )\n    .then((response: any) => {\n      return response.data.IpfsHash;\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n};\n\nexport const formatFullIpfsUrl = (url: string): string => {\n  return `${pinata_base_url}${url}`;\n};\n"]},"metadata":{},"sourceType":"module"}