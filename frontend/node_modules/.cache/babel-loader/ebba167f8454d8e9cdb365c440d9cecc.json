{"ast":null,"code":"var _jsxFileName = \"/Users/K.Z./Desktop/crypto/pow-nft/frontend/src/components/ProfileMasterContainer/ProfileMasterContainer.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { fetchOwnedNFTs } from 'common/wallet/contractHelpers';\nimport RenderIf from 'components/RenderIf/RenderIf';\nimport Spacer from 'components/Spacer/Spacer';\nimport './profileMasterContainer.scss';\nimport LoadingSpinner from 'components/LoadingSpinner/LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileMasterContainer = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [works, setWork] = useState([]);\n  const {\n    active,\n    account,\n    activate,\n    error,\n    connector,\n    library\n  } = useWeb3React();\n  useEffect(() => {\n    const onMount = async () => {\n      try {\n        setWork(await fetchOwnedNFTs(account || ''));\n      } catch (err) {\n        console.log(err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    onMount();\n  }, [account]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-master-container\",\n    children: [/*#__PURE__*/_jsxDEV(RenderIf, {\n      value: isLoading,\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header3\",\n      children: \"Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Spacer, {\n      size: \"large\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: [\"Address: \", account]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Spacer, {\n      size: \"large\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header4\",\n      children: \"Proposals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Spacer, {\n      size: \"medium\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header4\",\n      children: \"Achievements\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Spacer, {\n      size: \"medium\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: works.map(work => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body\",\n        children: work.tokenId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProfileMasterContainer, \"Q4tO7iz2LBc2L0c0TeO5hID2WVw=\", false, function () {\n  return [useWeb3React];\n});\n\n_c = ProfileMasterContainer;\nexport default ProfileMasterContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileMasterContainer\");","map":{"version":3,"sources":["/Users/K.Z./Desktop/crypto/pow-nft/frontend/src/components/ProfileMasterContainer/ProfileMasterContainer.tsx"],"names":["useEffect","useState","useWeb3React","fetchOwnedNFTs","RenderIf","Spacer","LoadingSpinner","ProfileMasterContainer","isLoading","setIsLoading","works","setWork","active","account","activate","error","connector","library","onMount","err","console","log","map","work","tokenId"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,YAAT,QAA6B,kBAA7B;AAEA,SAASC,cAAT,QAA+B,+BAA/B;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAO,+BAAP;AACA,OAAOC,cAAP,MAA2B,0CAA3B;;;AAEA,MAAMC,sBAAsB,GAAG,MAAmB;AAAA;;AAChD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACS,KAAD,EAAQC,OAAR,IAAmBV,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM;AAAEW,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA,QAAnB;AAA6BC,IAAAA,KAA7B;AAAoCC,IAAAA,SAApC;AAA+CC,IAAAA;AAA/C,MAA2Df,YAAY,EAA7E;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkB,OAAO,GAAG,YAAY;AAC1B,UAAI;AACFP,QAAAA,OAAO,CAAC,MAAMR,cAAc,CAACU,OAAO,IAAI,EAAZ,CAArB,CAAP;AACD,OAFD,CAEE,OAAOM,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,OAJD,SAIU;AACRV,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,KARD;;AAUAS,IAAAA,OAAO;AACR,GAZQ,EAYN,CAACL,OAAD,CAZM,CAAT;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEL,SAAjB;AAAA,6BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BAAgCK,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YARF,eAUE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAWE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAXF,eAaE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,eAcE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAdF,eAeE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,gBACGH,KAAK,CAACY,GAAN,CAAWC,IAAD,iBACT;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,kBAAuBA,IAAI,CAACC;AAA5B;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CA1CD;;GAAMjB,sB;UAG6DL,Y;;;KAH7DK,sB;AA4CN,eAAeA,sBAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { Web3Provider } from '@ethersproject/providers';\nimport { fetchOwnedNFTs } from 'common/wallet/contractHelpers';\nimport RenderIf from 'components/RenderIf/RenderIf';\nimport Spacer from 'components/Spacer/Spacer';\nimport './profileMasterContainer.scss';\nimport LoadingSpinner from 'components/LoadingSpinner/LoadingSpinner';\n\nconst ProfileMasterContainer = (): JSX.Element => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [works, setWork] = useState([]);\n  const { active, account, activate, error, connector, library } = useWeb3React<Web3Provider>();\n\n  useEffect(() => {\n    const onMount = async () => {\n      try {\n        setWork(await fetchOwnedNFTs(account || ''));\n      } catch (err) {\n        console.log(err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    onMount();\n  }, [account]);\n\n  return (\n    <div className=\"profile-master-container\">\n      <RenderIf value={isLoading}>\n        <LoadingSpinner />\n      </RenderIf>\n\n      <div className=\"header3\">Profile</div>\n      <Spacer size=\"large\" />\n      <div className=\"body\">Address: {account}</div>\n      <Spacer size=\"large\" />\n\n      <div className=\"header4\">Proposals</div>\n      <Spacer size=\"medium\" />\n\n      <div className=\"header4\">Achievements</div>\n      <Spacer size=\"medium\" />\n      <div className=\"body\">\n        {works.map((work: any) => (\n          <div className=\"body\">{work.tokenId}</div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileMasterContainer;\n"]},"metadata":{},"sourceType":"module"}