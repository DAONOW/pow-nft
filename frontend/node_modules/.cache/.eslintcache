[{"/Users/K.Z./Desktop/crypto/pow-nft/frontend/src/index.js":"1","/Users/K.Z./Desktop/crypto/pow-nft/frontend/src/App.js":"2","/Users/K.Z./Desktop/crypto/pow-nft/frontend/src/reportWebVitals.js":"3","/Users/K.Z./Desktop/crypto/pow-nft/frontend/src/redux/rootReducer.tsx":"4","/Users/K.Z./Desktop/crypto/pow-nft/frontend/src/components/Router/history.ts":"5","/Users/K.Z./Desktop/crypto/pow-nft/frontend/src/components/ProposerMasterPage/ProposerMasterPage.tsx":"6","/Users/K.Z./Desktop/crypto/pow-nft/frontend/src/components/ProfileMasterContainer/ProfileMasterContainer.tsx":"7","/Users/K.Z./Desktop/crypto/pow-nft/frontend/src/components/ReviewerMasterPage/ReviewerMasterPage.tsx":"8","/Users/K.Z./Desktop/crypto/pow-nft/frontend/src/components/ProposerMasterPage/helper.ts":"9","/Users/K.Z./Desktop/crypto/pow-nft/frontend/src/components/MasterNav/MasterNav.tsx":"10","/Users/K.Z./Desktop/crypto/pow-nft/frontend/src/components/Button/Button.tsx":"11","/Users/K.Z./Desktop/crypto/pow-nft/frontend/src/components/Spacer/Spacer.tsx":"12","/Users/K.Z./Desktop/crypto/pow-nft/frontend/src/components/Input/Input.tsx":"13","/Users/K.Z./Desktop/crypto/pow-nft/frontend/src/components/RenderIf/RenderIf.tsx":"14","/Users/K.Z./Desktop/crypto/pow-nft/frontend/src/components/ProposalContainer/ProposalContainer.tsx":"15","/Users/K.Z./Desktop/crypto/pow-nft/frontend/src/components/LoadingSpinner/LoadingSpinner.tsx":"16","/Users/K.Z./Desktop/crypto/pow-nft/frontend/src/assets/svg/Chevron.tsx":"17","/Users/K.Z./Desktop/crypto/pow-nft/frontend/src/hooks/walletHooks.ts":"18","/Users/K.Z./Desktop/crypto/pow-nft/frontend/src/wallet/initializeWallet.ts":"19","/Users/K.Z./Desktop/crypto/pow-nft/frontend/src/wallet/contractHelpers.ts":"20","/Users/K.Z./Desktop/crypto/pow-nft/frontend/src/wallet/proposal.ts":"21","/Users/K.Z./Desktop/crypto/pow-nft/frontend/src/components/CommunityMasterContainer/CommunityMasterContainer.tsx":"22"},{"size":1026,"mtime":1632079228310,"results":"23","hashOfConfig":"24"},{"size":1164,"mtime":1632080221257,"results":"25","hashOfConfig":"24"},{"size":364,"mtime":1631663102854,"results":"26","hashOfConfig":"24"},{"size":116,"mtime":1631738722701,"results":"27","hashOfConfig":"24"},{"size":210,"mtime":1626034137651,"results":"28","hashOfConfig":"24"},{"size":3442,"mtime":1632079286541,"results":"29","hashOfConfig":"24"},{"size":1927,"mtime":1632079842641,"results":"30","hashOfConfig":"24"},{"size":2202,"mtime":1632079269757,"results":"31","hashOfConfig":"24"},{"size":1120,"mtime":1631749672932,"results":"32","hashOfConfig":"24"},{"size":2311,"mtime":1632080202141,"results":"33","hashOfConfig":"24"},{"size":1054,"mtime":1626322019949,"results":"34","hashOfConfig":"24"},{"size":376,"mtime":1629776300625,"results":"35","hashOfConfig":"24"},{"size":2036,"mtime":1631739661674,"results":"36","hashOfConfig":"24"},{"size":432,"mtime":1630864477129,"results":"37","hashOfConfig":"24"},{"size":2590,"mtime":1632079265047,"results":"38","hashOfConfig":"24"},{"size":918,"mtime":1631748270040,"results":"39","hashOfConfig":"24"},{"size":522,"mtime":1629123447233,"results":"40","hashOfConfig":"24"},{"size":756,"mtime":1632079290023,"results":"41","hashOfConfig":"24"},{"size":1610,"mtime":1631745752575,"results":"42","hashOfConfig":"24"},{"size":3702,"mtime":1632080010597,"results":"43","hashOfConfig":"24"},{"size":777,"mtime":1632075456656,"results":"44","hashOfConfig":"24"},{"size":113,"mtime":1632080153658,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"6zsm12",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"55"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"55"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"55"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"55"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"55"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/K.Z./Desktop/crypto/pow-nft/frontend/src/index.js",[],["97","98"],"/Users/K.Z./Desktop/crypto/pow-nft/frontend/src/App.js",[],"/Users/K.Z./Desktop/crypto/pow-nft/frontend/src/reportWebVitals.js",[],"/Users/K.Z./Desktop/crypto/pow-nft/frontend/src/redux/rootReducer.tsx",[],["99","100"],"/Users/K.Z./Desktop/crypto/pow-nft/frontend/src/components/Router/history.ts",[],"/Users/K.Z./Desktop/crypto/pow-nft/frontend/src/components/ProposerMasterPage/ProposerMasterPage.tsx",["101","102","103","104","105"],"import { useWeb3React } from '@web3-react/core';\nimport { Web3Provider } from '@ethersproject/providers';\nimport React, { useState } from 'react';\nimport { pinFileToIPFS, formSchema, formatFullIpfsUrl } from './helper';\nimport Button from 'components/Button/Button';\nimport Input from 'components/Input/Input';\nimport Spacer from 'components/Spacer/Spacer';\nimport RenderIf from 'components/RenderIf/RenderIf';\nimport { createProposal } from 'wallet/contractHelpers';\nimport './proposerMasterPage.scss';\n\nconst ProposerMasterPage = (): JSX.Element => {\n  const { active, account, activate, error, connector, library } = useWeb3React<Web3Provider>();\n\n  const [name, setName] = useState<string>('');\n  const [description, setDescription] = useState<string>('');\n  const [ipfsUrl, setIpfsUrl] = useState<string>('');\n  const [isUploading, setIsUploading] = useState(false);\n  const [uploadState, setUploadState] = useState<number>(0);\n  const [showError, setShowError] = useState(false);\n\n  const uploadFile = async () => {\n    try {\n      setIsUploading(true);\n      setShowError(true);\n      if (areAllFieldsValid()) {\n        const res: string = await pinFileToIPFS(name, description);\n        setIpfsUrl(res);\n        setUploadState(1);\n      }\n    } catch (err) {\n      console.log(err);\n    } finally {\n      setIsUploading(false);\n    }\n  };\n\n  const showNameErrors = !formSchema.fields.Name.isValidSync(name) && showError;\n  const showDescritionError = !formSchema.fields.Description.isValidSync(description) && showError;\n\n  const areAllFieldsValid = (): boolean => {\n    return formSchema.fields.Name.isValidSync(name) && formSchema.fields.Description.isValidSync(description);\n  };\n\n  return (\n    <React.Fragment>\n      <RenderIf value={!active}>\n        <Spacer size=\"xlarge\" />\n        <div className=\"loading-spinner-container\">Please connect wallet</div>\n      </RenderIf>\n\n      <RenderIf value={active}>\n        <div className=\"proposer-dashboard-container\">\n          <div className=\"header3\">Create a Proposal</div>\n          <Spacer size=\"xlarge\" />\n\n          <div className=\"proposer-dashboard-input-row-container\">\n            <div className={`proposer-name-column ${showNameErrors && 'warning'}`}>Name</div>\n            <div className=\"proposer-dashboard-input-container\">\n              <Input value={name} onChange={(e: any) => setName(e.target.value)} />\n            </div>\n          </div>\n\n          <div className=\"proposer-dashboard-input-row-container\">\n            <div className={`proposer-name-column ${showDescritionError && 'warning'}`}>Description</div>\n            <div className=\"proposer-dashboard-input-container\">\n              <Input value={description} onChange={(e: any) => setDescription(e.target.value)} />\n            </div>\n          </div>\n\n          <Spacer size=\"small\" />\n\n          <RenderIf value={uploadState === 0}>\n            <Button onClick={async () => await uploadFile()} disabled={isUploading}>\n              Upload to IPFS\n            </Button>\n          </RenderIf>\n\n          <RenderIf value={uploadState === 1}>\n            <Button\n              onClick={async () => {\n                await createProposal(formatFullIpfsUrl(ipfsUrl));\n              }}\n              disabled={isUploading}\n            >\n              Create Approval\n            </Button>\n          </RenderIf>\n        </div>\n      </RenderIf>\n    </React.Fragment>\n  );\n};\n\nexport default ProposerMasterPage;\n","/Users/K.Z./Desktop/crypto/pow-nft/frontend/src/components/ProfileMasterContainer/ProfileMasterContainer.tsx",["106","107","108","109","110","111"],"/Users/K.Z./Desktop/crypto/pow-nft/frontend/src/components/ReviewerMasterPage/ReviewerMasterPage.tsx",["112","113"],"import React, { useEffect, useState } from 'react';\nimport Spacer from 'components/Spacer/Spacer';\nimport RenderIf from 'components/RenderIf/RenderIf';\nimport LoadingSpinner from 'components/LoadingSpinner/LoadingSpinner';\nimport { fetchAllProposals } from 'wallet/contractHelpers';\nimport { filterApprovedProposals } from 'wallet/proposal';\nimport ProposalContainer from 'components/ProposalContainer/ProposalContainer';\nimport { useWeb3React } from '@web3-react/core';\nimport { Web3Provider } from '@ethersproject/providers';\nimport './reviewMasterPage.scss';\n\nexport interface proposal {\n  contributor: string;\n  nftID: number;\n  proposalDataURI: string;\n}\n\nconst ReviewerMasterPage = (): JSX.Element => {\n  const [allProposals, setAllProposals] = useState<proposal[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    fetchAndSetProposals();\n  }, []);\n\n  const fetchAndSetProposals = async () => {\n    try {\n      const allProposals = await fetchAllProposals();\n      setAllProposals(allProposals);\n      console.log(allProposals);\n    } catch (err) {\n      console.log(err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"all-proposals-container\">\n        <RenderIf value={!isLoading}>\n          <div className=\"fade-in\">\n            <div className=\"header3\">Unapproved</div>\n            <Spacer size=\"medium\" />\n            {filterApprovedProposals(allProposals, false).map((proposal: proposal, idx: number) => (\n              <ProposalContainer proposal={proposal} idx={idx} key={`${idx} ${proposal.proposalDataURI}`} />\n            ))}\n\n            <Spacer size=\"xlarge\" />\n            <div className=\"header3\">Approved</div>\n            <Spacer size=\"medium\" />\n            {filterApprovedProposals(allProposals, true).map((proposal: proposal, idx: number) => (\n              <ProposalContainer proposal={proposal} idx={idx} key={`${idx} ${proposal.proposalDataURI}`} />\n            ))}\n          </div>\n        </RenderIf>\n\n        <RenderIf value={isLoading}>\n          <LoadingSpinner />\n        </RenderIf>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default ReviewerMasterPage;\n","/Users/K.Z./Desktop/crypto/pow-nft/frontend/src/components/ProposerMasterPage/helper.ts",[],"/Users/K.Z./Desktop/crypto/pow-nft/frontend/src/components/MasterNav/MasterNav.tsx",["114","115","116"],"/Users/K.Z./Desktop/crypto/pow-nft/frontend/src/components/Button/Button.tsx",[],"/Users/K.Z./Desktop/crypto/pow-nft/frontend/src/components/Spacer/Spacer.tsx",[],"/Users/K.Z./Desktop/crypto/pow-nft/frontend/src/components/Input/Input.tsx",[],"/Users/K.Z./Desktop/crypto/pow-nft/frontend/src/components/RenderIf/RenderIf.tsx",[],"/Users/K.Z./Desktop/crypto/pow-nft/frontend/src/components/ProposalContainer/ProposalContainer.tsx",["117"],"import { useEffect, useState } from 'react';\nimport RenderIf from 'components/RenderIf/RenderIf';\nimport Chevron from 'assets/svg/Chevron';\nimport Spacer from 'components/Spacer/Spacer';\nimport Button from 'components/Button/Button';\nimport { approveProposal } from 'wallet/contractHelpers';\nimport { trimWalletAddress } from 'components/MasterNav/MasterNav';\nimport { isProposalApproved, resolveIPFSData } from 'wallet/proposal';\nimport { proposal } from 'components/ReviewerMasterPage/ReviewerMasterPage';\n\ninterface ownProps {\n  idx: number;\n  proposal: proposal;\n}\n\nconst approve = async (proposalId: number) => {\n  try {\n    await approveProposal(proposalId);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst ProposalContainer = (props: ownProps): JSX.Element => {\n  const { proposal, idx } = props;\n\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const [workData, setWorkdata] = useState('');\n\n  useEffect(() => {\n    const onMount = async () => {\n      if (proposal.proposalDataURI.length > 0) {\n        const res = await resolveIPFSData(proposal.proposalDataURI);\n        console.log(res);\n        setWorkdata(res);\n      }\n    };\n\n    onMount();\n  }, [proposal.proposalDataURI]);\n\n  useEffect(() => {\n    if (idx === 0 && !isProposalApproved(proposal)) {\n      setIsOpen(true);\n    }\n  }, [idx]);\n\n  return (\n    <div className=\"proposal-container\">\n      <div className=\"proposal-top-container\">\n        <div className=\"left-container\">\n          <div className=\"id-container\">#{idx}</div>\n          <div>From: {trimWalletAddress(proposal.contributor)}</div>\n        </div>\n        <div>\n          <RenderIf value={isOpen}>\n            <div onClick={() => setIsOpen(!isOpen)} className=\"flipped pointer\">\n              <Chevron />\n            </div>\n          </RenderIf>\n\n          <RenderIf value={!isOpen}>\n            <div onClick={() => setIsOpen(!isOpen)} className=\"pointer\">\n              <Chevron />\n            </div>\n          </RenderIf>\n        </div>\n      </div>\n\n      <RenderIf value={isOpen}>\n        <Spacer size=\"xlarge\" />\n        <hr />\n        <Spacer size=\"xlarge\" />\n\n        <div className=\"header3\">Metadata</div>\n        <div>\n          <pre>{JSON.stringify(workData, null, 2)}</pre>\n        </div>\n\n        <Spacer size=\"xlarge\" />\n        <RenderIf value={!isProposalApproved(proposal)}>\n          <Button\n            onClick={async () => {\n              await approve(idx);\n            }}\n          >\n            Approve\n          </Button>\n        </RenderIf>\n      </RenderIf>\n    </div>\n  );\n};\n\nexport default ProposalContainer;\n","/Users/K.Z./Desktop/crypto/pow-nft/frontend/src/components/LoadingSpinner/LoadingSpinner.tsx",[],"/Users/K.Z./Desktop/crypto/pow-nft/frontend/src/assets/svg/Chevron.tsx",[],"/Users/K.Z./Desktop/crypto/pow-nft/frontend/src/hooks/walletHooks.ts",["118"],"import { useState, useEffect } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { injected } from 'wallet/initializeWallet';\n\nexport const useEagerConnect = () => {\n  const { activate, active } = useWeb3React();\n\n  const [tried, setTried] = useState(false);\n\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized: boolean) => {\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true);\n        });\n      } else {\n        setTried(true);\n      }\n    });\n  }, []);\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true);\n    }\n  }, [tried, active]);\n\n  return tried;\n};\n","/Users/K.Z./Desktop/crypto/pow-nft/frontend/src/wallet/initializeWallet.ts",["119"],"import { ethers } from 'ethers';\nimport { InjectedConnector } from '@web3-react/injected-connector';\nimport { Web3Provider } from '@ethersproject/providers';\n\ndeclare global {\n  interface Window {\n    ethereum: any;\n  }\n}\n\nenum ConnectorNames {\n  Injected = 'Injected',\n  Network = 'Network',\n  WalletConnect = 'WalletConnect',\n  WalletLink = 'WalletLink',\n  Ledger = 'Ledger',\n  Trezor = 'Trezor',\n  Lattice = 'Lattice',\n  Frame = 'Frame',\n  Authereum = 'Authereum',\n  Fortmatic = 'Fortmatic',\n  Magic = 'Magic',\n  Portis = 'Portis',\n  Torus = 'Torus',\n}\n\nexport const injected = new InjectedConnector({ supportedChainIds: [1337] });\n\nexport const loadWeb3 = async (): Promise<void> => {\n  try {\n    const provider = new ethers.providers.Web3Provider(window.ethereum, 'any');\n\n    // Prompt user for account connections\n    await provider.send('eth_requestAccounts', []);\n\n    const signer = provider.getSigner();\n\n    const address = await signer.getAddress();\n    const balance = await signer.getBalance(); // or provider.getBalance(address)\n    console.log(address, balance);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport function getLibrary(provider: any): Web3Provider {\n  const library = new Web3Provider(provider);\n  library.pollingInterval = 12000;\n  return library;\n}\n\n// import { SupportedChainId } from '../constants/chains'\n\n// const NETWORK_POLLING_INTERVALS: { [chainId: number]: number } = {\n//   [SupportedChainId.ARBITRUM_ONE]: ms`1s`,\n//   [SupportedChainId.ARBITRUM_RINKEBY]: ms`1s`,\n//   [SupportedChainId.OPTIMISM]: ms`1s`,\n//   [SupportedChainId.OPTIMISTIC_KOVAN]: ms`1s`,\n// }\n","/Users/K.Z./Desktop/crypto/pow-nft/frontend/src/wallet/contractHelpers.ts",["120","121"],"/Users/K.Z./Desktop/crypto/pow-nft/frontend/src/wallet/proposal.ts",[],"/Users/K.Z./Desktop/crypto/pow-nft/frontend/src/components/CommunityMasterContainer/CommunityMasterContainer.tsx",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":13,"column":19,"nodeType":"128","messageId":"129","endLine":13,"endColumn":26},{"ruleId":"126","severity":1,"message":"130","line":13,"column":28,"nodeType":"128","messageId":"129","endLine":13,"endColumn":36},{"ruleId":"126","severity":1,"message":"131","line":13,"column":38,"nodeType":"128","messageId":"129","endLine":13,"endColumn":43},{"ruleId":"126","severity":1,"message":"132","line":13,"column":45,"nodeType":"128","messageId":"129","endLine":13,"endColumn":54},{"ruleId":"126","severity":1,"message":"133","line":13,"column":56,"nodeType":"128","messageId":"129","endLine":13,"endColumn":63},{"ruleId":"126","severity":1,"message":"134","line":5,"column":26,"nodeType":"128","messageId":"129","endLine":5,"endColumn":41},{"ruleId":"126","severity":1,"message":"135","line":12,"column":11,"nodeType":"128","messageId":"129","endLine":12,"endColumn":17},{"ruleId":"126","severity":1,"message":"130","line":12,"column":28,"nodeType":"128","messageId":"129","endLine":12,"endColumn":36},{"ruleId":"126","severity":1,"message":"131","line":12,"column":38,"nodeType":"128","messageId":"129","endLine":12,"endColumn":43},{"ruleId":"126","severity":1,"message":"132","line":12,"column":45,"nodeType":"128","messageId":"129","endLine":12,"endColumn":54},{"ruleId":"126","severity":1,"message":"133","line":12,"column":56,"nodeType":"128","messageId":"129","endLine":12,"endColumn":63},{"ruleId":"126","severity":1,"message":"136","line":8,"column":10,"nodeType":"128","messageId":"129","endLine":8,"endColumn":22},{"ruleId":"126","severity":1,"message":"137","line":9,"column":10,"nodeType":"128","messageId":"129","endLine":9,"endColumn":22},{"ruleId":"126","severity":1,"message":"131","line":18,"column":38,"nodeType":"128","messageId":"129","endLine":18,"endColumn":43},{"ruleId":"126","severity":1,"message":"132","line":18,"column":45,"nodeType":"128","messageId":"129","endLine":18,"endColumn":54},{"ruleId":"126","severity":1,"message":"133","line":18,"column":56,"nodeType":"128","messageId":"129","endLine":18,"endColumn":63},{"ruleId":"138","severity":1,"message":"139","line":46,"column":6,"nodeType":"140","endLine":46,"endColumn":11,"suggestions":"141"},{"ruleId":"138","severity":1,"message":"142","line":20,"column":6,"nodeType":"140","endLine":20,"endColumn":8,"suggestions":"143"},{"ruleId":"126","severity":1,"message":"144","line":11,"column":6,"nodeType":"128","messageId":"129","endLine":11,"endColumn":20},{"ruleId":"145","severity":1,"message":"146","line":39,"column":5,"nodeType":"147","messageId":"148","endLine":39,"endColumn":22},{"ruleId":"126","severity":1,"message":"149","line":94,"column":9,"nodeType":"128","messageId":"129","endLine":94,"endColumn":14},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"@typescript-eslint/no-unused-vars","'account' is assigned a value but never used.","Identifier","unusedVar","'activate' is assigned a value but never used.","'error' is assigned a value but never used.","'connector' is assigned a value but never used.","'library' is assigned a value but never used.","'isContractOwner' is defined but never used.","'active' is assigned a value but never used.","'useWeb3React' is defined but never used.","'Web3Provider' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'proposal'. Either include it or remove the dependency array.","ArrayExpression",["152"],"React Hook useEffect has a missing dependency: 'activate'. Either include it or remove the dependency array.",["153"],"'ConnectorNames' is defined but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","'owner' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},"Update the dependencies array to be: [idx, proposal]",{"range":"158","text":"159"},"Update the dependencies array to be: [activate]",{"range":"160","text":"161"},[1314,1319],"[idx, proposal]",[544,546],"[activate]"]